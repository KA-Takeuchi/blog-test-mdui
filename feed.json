{
    "version": "https://jsonfeed.org/version/1",
    "title": "MONET Tech-blog",
    "description": "This is a tech-blog of MONET-Technologies",
    "home_page_url": "https://ka-takeuchi.github.io/blog-test-mdui",
    "items": [
        {
            "id": "https://ka-takeuchi.github.io/blog-test-mdui/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(VSCode%E3%81%AE%E8%A8%AD%E5%AE%9A%E7%B7%A8)/",
            "url": "https://ka-takeuchi.github.io/blog-test-mdui/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(VSCode%E3%81%AE%E8%A8%AD%E5%AE%9A%E7%B7%A8)/",
            "title": "技術ブログ始めました(VSCodeの設定編)",
            "date_published": "2020-07-15T23:31:46.000Z",
            "content_html": "<p>VSCode を使うとコンテナにアクセスできてビビる。。。</p>\n<a id=\"more\"></a>\n<p>asdfa</p>\n<h2 id=\"画像の貼り付け\"><a class=\"markdownIt-Anchor\" href=\"#画像の貼り付け\">#</a> 画像の貼り付け</h2>\n<img src=\"/blog-test-mdui/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(VSCode%E3%81%AE%E8%A8%AD%E5%AE%9A%E7%B7%A8)/2020-07-17T100910.png\" class=\"\">\n<p>vscode のエクステンションを使うと画像をコピペすると自動でフォルダ内に配置してくれる。</p>\n<p>が、困ったことにリモート接続した場合、画像のクリップボードはコピーされない既知のバグ (仕様？) があるらしく、まだリモート先への画像コピペができないんですね。。。</p>\n<p>なので、</p>\n<ol>\n<li>リモート接続せずに執筆</li>\n<li>書き終わったらリモート接続して github にプッシュ</li>\n</ol>\n<p>みたいな悲しい事態が起こる。。。</p>\n",
            "tags": [
                "hexo",
                "vscode"
            ]
        },
        {
            "id": "https://ka-takeuchi.github.io/blog-test-mdui/2020/07/15/Plotly%20Dash%E3%82%92%E8%A9%A6%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F/",
            "url": "https://ka-takeuchi.github.io/blog-test-mdui/2020/07/15/Plotly%20Dash%E3%82%92%E8%A9%A6%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F/",
            "title": "Plotly Dashを試してみた",
            "date_published": "2020-07-15T19:03:27.000Z",
            "content_html": "<h1 id=\"はじめに\"><a class=\"markdownIt-Anchor\" href=\"#はじめに\">#</a> はじめに</h1>\n<p>後で書きます</p>\n<a id=\"more\"></a>\n<p>aaa</p>\n",
            "tags": [
                "python",
                "visualization"
            ]
        },
        {
            "id": "https://ka-takeuchi.github.io/blog-test-mdui/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(Hexo-on-Docker%E7%B7%A8)/",
            "url": "https://ka-takeuchi.github.io/blog-test-mdui/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(Hexo-on-Docker%E7%B7%A8)/",
            "title": "技術ブログ始めました(Hexo-on-Docker編)",
            "date_published": "2020-07-15T17:19:39.000Z",
            "content_html": "<h1 id=\"はじめに\"><a class=\"markdownIt-Anchor\" href=\"#はじめに\">#</a> はじめに</h1>\n<p>MONET Technologies 株式会社、2020 年新卒入社の竹内です。</p>\n<p>この記事では、技術ブログ開始に当たって、静的サイトジェネレータ Hexo を導入する話です。</p>\n<a id=\"more\"></a>\n<p>前提として、今回 Hexo の環境を Docker で構築します。<br>\nDocker 環境の構築については<a href=\"https://awesome-linus.com/2019/08/17/mac-docker-install/\" target=\"_blank\" rel=\"noopener\">こちら</a>を参照。<br>\n筆者は今回初めて Docker を使ってみているので、変なところがあれば指摘していただければと思います。</p>\n<h2 id=\"執筆用dockerイメージのビルド\"><a class=\"markdownIt-Anchor\" href=\"#執筆用dockerイメージのビルド\">#</a> 執筆用 Docker イメージのビルド</h2>\n<p>まず、執筆用の Docker イメージをビルドするところから始まります。</p>\n<p>以下、後で執筆</p>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "https://ka-takeuchi.github.io/blog-test-mdui/2020/07/14/Arch%20Linux%E3%81%AF%E3%81%84%E3%81%84%E3%81%9E%E3%81%A8%E3%81%84%E3%81%86%E8%A9%B1/",
            "url": "https://ka-takeuchi.github.io/blog-test-mdui/2020/07/14/Arch%20Linux%E3%81%AF%E3%81%84%E3%81%84%E3%81%9E%E3%81%A8%E3%81%84%E3%81%86%E8%A9%B1/",
            "title": "Arch Linuxはいいぞという話",
            "date_published": "2020-07-14T16:51:27.000Z",
            "content_html": "<h1 id=\"はじめに\"><a class=\"markdownIt-Anchor\" href=\"#はじめに\">#</a> はじめに</h1>\n<a id=\"more\"></a>\n<h1 id=\"arch-linuxを自宅のサーバに入れました\"><a class=\"markdownIt-Anchor\" href=\"#arch-linuxを自宅のサーバに入れました\">#</a> Arch Linux を自宅のサーバに入れました</h1>\n<p>以下、後で執筆</p>\n",
            "tags": [
                "Arch Linux",
                "Linux"
            ]
        },
        {
            "id": "https://ka-takeuchi.github.io/blog-test-mdui/2020/07/14/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(%E6%A7%8B%E6%88%90%E7%B7%A8)/",
            "url": "https://ka-takeuchi.github.io/blog-test-mdui/2020/07/14/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(%E6%A7%8B%E6%88%90%E7%B7%A8)/",
            "title": "技術ブログ始めました(構成編)",
            "date_published": "2020-07-14T05:09:45.000Z",
            "content_html": "<h1 id=\"はじめに\"><a class=\"markdownIt-Anchor\" href=\"#はじめに\">#</a> はじめに</h1>\n<p>MONET Technologies 株式会社、2020 年新卒入社の竹内です。</p>\n<p>この度、弊社でも社員の技術力向上 &amp; アウトプットのために、技術ブログを開設する運びとなりました。</p>\n<p>記念すべき 1 回目の記事は、この技術ブログの立ち上げについて一通り書きます。</p>\n<a id=\"more\"></a>\n<h2 id=\"技術ブログの選定\"><a class=\"markdownIt-Anchor\" href=\"#技術ブログの選定\">#</a> 技術ブログの選定</h2>\n<p>技術ブログを作成するに当たって考えたのは、</p>\n<ol>\n<li>サーバの維持コスト</li>\n<li>記事の管理コスト</li>\n<li>執筆環境</li>\n</ol>\n<p>の 3 点です。技術ブログを公開するというということは当然 Web サーバが必要になるわけですが、そこにコストやメンテナンスが必要になると継続するのが面倒です。なので、何か外部のサービスを使って公開したいという要求があります。<br>\nまた、ページを編集したら、編集履歴や差分まで管理したいです。<br>\n更に、執筆環境としては、普段コードを書いたりするエディタを使ってそのまま書きたいですよね。</p>\n<p>ということで、今回は静的サイトジェネレータ<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\"> Hexo</a> と<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\"> Github Pages</a> を使って技術ブログを作っていこうという流れになりました。<br>\nただ、今回用いる Hexo は Node.js で作られており、バージョン管理などが面倒です。そこで、今回は、</p>\n<ul>\n<li>生成環境：Docker 上の Hexo</li>\n<li>執筆環境：Visual Studio Code</li>\n<li>公開環境：Github Pages</li>\n</ul>\n<p>という構成で全体を組みました (もちろん執筆環境はお好きなエディタを使ってください)。</p>\n<p>次回からそれぞれの環境について執筆していきます。</p>\n",
            "tags": [
                "hexo",
                "vscode",
                "github",
                "docker"
            ]
        }
    ]
}